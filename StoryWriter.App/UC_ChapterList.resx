<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>165, 17</value>
  </metadata>
  <metadata name="tvImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>258, 17</value>
  </metadata>
  <data name="tvImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAngoAAAJNU0Z0AUkBTAIBAQIB
        AAFoAQABaAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARD/
        AFcAA1wBxAGGAXYBaAH0AdEBlgFoAf8BzgGSAWMB/wHLAY4BXgH/AckBigFbAf8BxwGHAVYB/wHDAYQB
        UgH/AcMBhAFSAf8BwwGEAVIB/wHDAYQBUgH/AcMBhAFSAf8BwwGEAVIB/wNWAbCIAAFAAkEBcAFTAlQB
        pgFcAWcBbwHqAU0BdwGaAfcBTQF3AZoB9wFNAXcBmgH3AU0BdwGaAfcBTQF3AZoB9wFNAXcBmgH3AU0B
        dwGaAfcBTQF3AZoB9wFNAXUBmgH3AVcBcAGBAfEDTQGTCAAB1wGhAXUB/wH4AfIB7QH/AfcB8AHqAf8B
        9gHtAeYB/wH0AeoB4gH/AfMB5wHeAf8B8QHkAdsB/wHwAeIB2AH/AfAB4gHYAf8B8AHiAdgB/wHwAeIB
        2AH/AfAB4gHYAf8B8AHiAdgB/wG+AYoBUQH9iAABYAFqAWwB5gF5AX0BfwHwAacBvgHOAf0BngHbAfQB
        /wGWAdoB8wH/AY4B2AHzAf8BhgHXAfMB/wF/AdQB8gH/AXkB0wHyAf8BcgHSAfEB/wFsAdAB8QH/AWkB
        zwHxAf8BqQHRAd8B/gFUAWoBeQHwCAAB2QGkAXoB/wH5AfMB7gH/AesB0gG+Bf8B6wHTAb8N/wHqAccB
        rQ3/AfAB4gHYAf8BxgGMAV8B/4gAAVEBgQGbAfcB7wH6Af4B/wGhAekB+QH/AZEB5QH4Af8BgQHhAfcB
        /wFyAd4B9gH/AWMB2gH1Af8BVAHXAfQB/wFHAdMB8wH/ATkB0AHyAf8BLgHNAfEB/wEmAcsB8AH/AcoB
        8gH7Af8BUQGBAZsB9wgAAd0BqAF+Af8B+QHzAe8B/wHrAdABugH/AesB0AG7Af8B6wHQAbsB/wHrAdAB
        uwH/AesB0AG7Af8B6wHRAb0B/wHqAc0BtQH/AeoBzQG1Af8B6gHNAbUB/wHqAc0BtQH/AfAB4gHYAf8B
        xgGKAVwB/4gAAUUBfAGeAfgB8gH6Af0B/wGzAe0B+gH/AaQB6QH5Af8BlQHmAfgB/wGFAeIB9wH/AXYB
        3gH2Af8BZQHbAfUB/wFXAdcB9AH/AUkB1AHzAf8BOwHRAfIB/wEwAc4B8QH/AcwB8gH7Af8BUQGCAZsB
        9wgAAd8BqgGCAf8B+QHzAe8B/wHqAc4BtwX/AesB0AG7Df8B6gHPAboB/wH7AfYB8gn/AfAB4gHYAf8B
        yAGNAV8B/4gAAUEBiQGlAfkB9gH8Af4B/wHIAfIB/AH/AbkB7wH7Af8BrAHsAfoB/wGcAegB+QH/AYsB
        4wH3Af8BfAHgAfYB/wFsAdwB9gH/AV0B2QH1Af8BTwHWAfQB/wFEAdMB8wH/AdAB8wH8Af8BUQGEAZsB
        9wgAAeEBrgGHAf8B+gH0AfAB/wHqAcsBsgH/AeoBzAGzAf8B6gHMAbMB/wHqAcwBswH/AeoBzAGzAf8B
        6gHOAbcB/wHoAccBrAH/AegBxwGsAf8B6AHIAbAB/wHoAcgBrgH/AfAB4gHYAf8BxAGGAVQB/4gAAU0B
        hgGpAfoB/gP/AfgB/QL/AfYB/QL/AfUB/AL/AfMB/AH+Af8B2AH2AfwB/wGUAeYB+AH/AYUB4wH3Af8B
        dgHfAfYB/wFoAdsB9QH/AVwB2AH0Af8B1wH0AfwB/wFRAYYBmwH3CAAB4wGxAYwB/wH6AfYB8QH/AeoB
        yQGuBf8B6gHJAbAN/wHoAccBrA3/AfEB5QHbAf8BxgGGAVUB/4gAAU0BjQGpAfoB6AH2AfsB/wGUAdQB
        7wH/AYgBzgHuAf8BcwHBAekB/wHJAekB9gH/AfIB/AH+Af8B8wH8Af4B/wHyAfwB/gH/AfAB/AH+Af8B
        7wH7Af4B/wHuAfsB/gH/Af4D/wFRAYgBmwH3CAAB5QG0AY8B/wH6AfYB8gH/AekBxgGqAf8B6QHGAawB
        /wHqAccBrAH/AekBxwGtAf8B6QHJAa4B/wHpAckBsAH/AegBxwGsAf8B6QHJAbAB/wHoAcgBsAH/AegB
        zAG1Af8B8gHnAd4B/wHIAYoBWQH/iAABWgF4AYUB8gHxAfoB/QH/AZQB3gH1Af8BkwHcAfQB/wGBAdUB
        8gH/AWoBygHtAf8BbAHLAeoB/wGFAdMB7wH/AYAB0gHvAf8BegHQAe8B/wF2Ac8B7gH/AXIBzwHuAf8B
        6QH3AfsB/wFSAXkBhQHzCAAB5wG3AZQB/wH7AfcB9AH/AekBwwGmBf8B6AHEAakN/wHoAccBrA3/AfcB
        8QHrAf8BywGPAV8B/4gAAVQBcAF5AfAB9wH8Af4B/wGOAeQB+AH/AZEB3gH1Af8BnwHgAfUB/wGsAeEB
        9gH/Ae8B+wH+Af8B9AH9Af4B/wHzAfwB/gH/AfEB/AH+Af8B7wH7Af4B/wHuAfsB/gH/ArUBtgH5AV0C
        YQHUCAAB6QG6AZgB/wH7AfcB9AH/AekBwwGmAf8B6QHDAaYB/wHpAcMBpgH/AekBwwGmAf8B6QHDAaYB
        /wHpAcMBpgH/AekBwwGmAf8B6QHDAaYB/wHpAcMBpgH/AekBwwGmAf8B+wH3AfQB/wHOAZMBZAH/iAAB
        RQGNAZ4B+AH9Av4B/wH+A/8C/gL/Af0B/gL/Af4D/wHqAfcB+wH/AWoBlgGsAfkBXwGYAaAB+AFfAZgB
        oAH4AV8BmAGgAfgBbwGVAaEB9wFiAWcBaAHhAzUBVggAAesBvQGbAf8B+wH3AfQp/wH7AfcB9AH/AdEB
        lwFqAf+IAAFbAl8B0AFSAZ0BrAH6AVQBngGtAfoBVAGeAa0B+gFUAZ4BrQH6AVMBngGtAfoBXgJlAd0D
        EQEWAwwBDwMMAQ8DDAEPAwwBDwMMAQ8DAwEECAAB7AG/AZ4B/wH7AfcB9AH/AZwB1QGlAf8BmAHTAaEB
        /wGUAdABnQH/AZABzgGYAf8BiwHLAZMB/wGHAckBjgH/AYIBxgGJAf8BfgHDAYQB/wF6AcEBgAH/AXYB
        vgF8Af8B+wH3AfQB/wHUAZsBbwH/yAABdgFxAWwB6wH7AfcB9AH/AfsB9wH0Af8B+wH3AfQB/wH7AfcB
        9AH/AfsB9wH0Af8B+wH3AfQB/wH7AfcB9AH/AfsB9wH0Af8B+wH3AfQB/wH7AfcB9AH/AfsB9wH0Af8B
        +wH3AfQB/wGcAYEBdAH4yAADRgF+AWcCZQHjAe0BwAGfAf8B6wG+AZ0B/wHrAbwBmgH/AekBugGWAf8B
        5wG3AZMB/wHmAbUBkAH/AeQBsgGMAf8B4gGvAYgB/wHgAawBhAH/Ad0BqQGAAf8B3AGlAX0B/wNdAcr/
        AIUAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAT/BAAC/wGAAQEEAAGAAQEB
        gAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGAAQEBgAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGAAQEB
        gAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGAAQEBgAEBBAABgAEBAYABAQQAAv8BgAEBBAAC/wGAAQEE
        AAT/BAAL
</value>
  </data>
</root>